Notes:
- mark visited cells as -1. Dont use extra memory to store visited



def maxAreaOfIsland(self, grid: List[List[int]]) -> int:

    num_rows = len(grid)
    num_cols = len(grid[0])
    
    def dfs(r, c):
        if r < 0 or r >= num_rows or c < 0 or c >= num_cols:
            return 0
        
        if grid[r][c] == 0 or grid[r][c] == -1:
            return 0

        grid[r][c] = -1 * grid[r][c]

        return 1 + dfs(r - 1, c) + dfs(r + 1, c) + dfs(r, c - 1) + dfs(r, c + 1)

    max_island = 0
    
    for r in range(0, num_rows):
        for c in range(0, num_cols):
            if grid[r][c] == 1:
                max_island = max(max_island, dfs(r, c))

    return max_island