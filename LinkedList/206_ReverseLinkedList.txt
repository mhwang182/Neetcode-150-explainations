Notes
- Trick is to keep a pointer for the reversed section as we traverse the list
- Set the current node next to the previous reversed section

Steps:
- initialize curr = head, prev = None
- while list has more
    - next pointer = curr.next
    - curr.next = prev
    - prev = curr
    - curr = next
    
- return reversed prev

def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
    if not head:
        return None

    curr = head
    prev = None

    while curr:
        next_node = curr.next
        curr.next = prev
        prev = curr
        curr = next_node

    return prev